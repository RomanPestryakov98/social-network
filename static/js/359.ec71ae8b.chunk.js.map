{"version":3,"file":"static/js/359.ec71ae8b.chunk.js","mappings":"6MAWA,MARA,SAAoBA,GACnB,OACCC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4BAA2BC,UACxCF,EAAAA,EAAAA,KAACG,EAAAA,GAAO,CAACC,GAAE,YAAAC,OAAcN,EAAMO,IAAKJ,SAAEH,EAAMQ,QAG/C,ECCA,MARA,SAAkBR,GACjB,OACCC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iBAAgBC,SAC5BH,EAAMS,SAGV,E,UCYA,MAfA,SAAgBC,GAA6B,IAA1BC,EAAQD,EAARC,SAAUC,EAAWF,EAAXE,YAC5B,OACCC,EAAAA,EAAAA,MAAA,OAAKX,UAAU,oBAAmBC,SAAA,EACjCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,6BAA4BC,SACxCS,EAAYE,aAAaC,KAAI,SAACC,GAAI,OAAKf,EAAAA,EAAAA,KAACgB,EAAU,CAACT,KAAMQ,EAAKR,MAAWQ,EAAKT,GAAM,OAEtFM,EAAAA,EAAAA,MAAA,MAAIX,UAAU,uCAAsCC,SAAA,CAClDS,EAAYM,SAASH,KAAI,SAACN,GAAO,OAAKR,EAAAA,EAAAA,KAACkB,EAAQ,CAACV,QAASA,EAAQA,SAAcA,EAAQF,GAAM,KAC9FN,EAAAA,EAAAA,KAACmB,EAAAA,EAAY,CAACC,KAAK,UAAUV,SAAUA,SAK3C,E,8BCFA,IAMA,GAAeW,EAAAA,EAAAA,KACdC,EAAAA,EAAAA,KAPqB,SAACC,GACtB,MAAO,CACNZ,YAAaY,EAAMZ,YAErB,GAG0B,CAAEa,+BAAAA,EAAAA,IAC3BC,EAAAA,EAFD,EAhBA,SAA0B1B,GAKzB,OACCC,EAAAA,EAAAA,KAAC0B,GAAOC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK5B,GAAK,IAAEW,SALrB,SAAkBkB,GACjB7B,EAAMyB,+BAA+BI,EAAKC,QAC3C,IAKD,G,kGCDA,MAXA,SAAqBpB,GAAwB,IAArBqB,EAAOrB,EAAPqB,QAASC,EAAOtB,EAAPsB,QAIhC,OACC/B,EAAAA,EAAAA,KAAA,UAAQC,UAAS,GAAAI,OAJG,WAIc,KAAAA,OAAK0B,EAAiC,GAH5C,qBAGiD7B,SAC3E4B,GAGJ,ECeA,MAtBA,SAAqBrB,GAAsB,IAAnBW,EAAIX,EAAJW,KAAMV,EAAQD,EAARC,SAC7BsB,GAAkEC,EAAAA,EAAAA,IAAQ,CAAEC,KAAM,aAA1EC,EAAQH,EAARG,SAAUC,EAAYJ,EAAZI,aAAcC,EAAKL,EAALK,MAAoBN,EAAOC,EAApBM,UAAaP,QAE9CQ,EAAwB,YAATnB,EAAqB,UAAsB,SAATA,GAAmB,OAO1E,OACCR,EAAAA,EAAAA,MAAA,QAAMF,SAAU0B,GANjB,SAAwBR,GACvBlB,EAASkB,GACTS,GACD,IAG8CnC,SAAA,EAC5CF,EAAAA,EAAAA,KAAA,OAAAE,UACCF,EAAAA,EAAAA,KAAA,YAAA2B,EAAAA,EAAAA,GAAA,GAAcQ,EAASI,EAAc,CACpCC,SAAU,2GAGZxC,EAAAA,EAAAA,KAACyC,EAAY,CAACV,QAASA,EAASD,QAA2B,SAAjBS,EAA2B,4EAAsC,YAAjBA,GAA8B,oHAG3H,C,4GCpBIG,EAA6B,SAACnB,GACjC,MAAO,CACNoB,KAAMpB,EAAMoB,KAEd,EAEalB,EAAmB,SAACmB,GAMhC,OAAOtB,EAAAA,EAAAA,IAAQoB,EAARpB,EALP,SAA2BvB,GAC1B,OACCA,EAAM4C,KAAKE,QAAS7C,EAAAA,EAAAA,KAAC4C,GAASjB,EAAAA,EAAAA,GAAA,GAAK5B,KAAYC,EAAAA,EAAAA,KAAC8C,EAAAA,GAAQ,CAAC1C,GAAG,UAE9D,GAED,C","sources":["components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.js","components/common/ButtonSubmit/ButtonSubmit.js","components/TextareaForm/TextareaForm.js","hoc/withAuthRedirect.js"],"sourcesContent":["import './DialogItem.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction DialogItem(props) {\r\n\treturn (\r\n\t\t<li className='dialogs-container__dialog'>\r\n\t\t\t<NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default DialogItem;\r\n","import './Messages.css';\r\n\r\nfunction Messages(props) {\r\n\treturn (\r\n\t\t<li className='messages__item'>\r\n\t\t\t{props.message}\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default Messages;\r\n","import './Dialogs.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Messages from './Messages/Messages';\r\nimport TextareaForm from '../TextareaForm/TextareaForm';\r\n\r\nfunction Dialogs({ onSubmit, dialogsPage }) {\r\n\treturn (\r\n\t\t<div className='dialogs-container'>\r\n\t\t\t<ul className='dialogs-container__dialogs'>\r\n\t\t\t\t{dialogsPage.dialogsUsers.map((user) => <DialogItem name={user.name} key={user.id} />)}\r\n\t\t\t</ul>\r\n\t\t\t<ul className='dialogs-container__messages messages'>\r\n\t\t\t\t{dialogsPage.messages.map((message) => <Messages message={message.message} key={message.id} />)}\r\n\t\t\t\t<TextareaForm type='dialogs' onSubmit={onSubmit} />\r\n\t\t\t</ul>\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Dialogs;\r\n","import { actionSendDialogMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\nfunction DialogsContainer(props) {\r\n\tfunction onSubmit(data) {\r\n\t\tprops.actionSendDialogMessageCreator(data.dialogs);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Dialogs {...props} onSubmit={onSubmit} />\r\n\t)\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage\r\n\t}\r\n}\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, { actionSendDialogMessageCreator }),\r\n\twithAuthRedirect\r\n)(DialogsContainer);","import './ButtonSubmit.css';\r\n\r\nfunction ButtonSubmit({ btnText, isValid }) {\r\n\tconst classNameBtn = 'btn-form';\r\n\tconst classNameBtnDisabled = 'btn-form_disabled';\r\n\r\n\treturn (\r\n\t\t<button className={`${classNameBtn} ${!isValid ? classNameBtnDisabled : ''}`}>\r\n\t\t\t{btnText}\r\n\t\t</button>\r\n\t)\r\n}\r\n\r\nexport default ButtonSubmit;\r\n\r\n","import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport ButtonSubmit from '../common/ButtonSubmit/ButtonSubmit';\r\n\r\nfunction TextareaForm({ type, onSubmit }) {\r\n\tconst { register, handleSubmit, reset, formState: { isValid } } = useForm({ mode: 'onChange' });\r\n\r\n\tconst nameTextarea = type === 'dialogs' ? 'dialogs' : (type === 'post' && 'post');\r\n\r\n\tfunction onHandleSubmit(data) {\r\n\t\tonSubmit(data);\r\n\t\treset();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit(onHandleSubmit)}>\r\n\t\t\t<div>\r\n\t\t\t\t<textarea {...register(nameTextarea, {\r\n\t\t\t\t\trequired: 'Обязательное поле',\r\n\t\t\t\t})} />\r\n\t\t\t</div>\r\n\t\t\t<ButtonSubmit isValid={isValid} btnText={(nameTextarea === 'post' && 'Добавить пост') || (nameTextarea === 'dialogs' && 'Отправить сообщение')} />\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default TextareaForm;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n\treturn {\r\n\t\tauth: state.auth,\r\n\t}\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\tfunction RedirectComponent(props) {\r\n\t\treturn (\r\n\t\t\tprops.auth.isAuth ? <Component {...props} /> : <Navigate to='/login' />\r\n\t\t)\r\n\t}\r\n\treturn connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}"],"names":["props","_jsx","className","children","NavLink","to","concat","id","name","message","_ref","onSubmit","dialogsPage","_jsxs","dialogsUsers","map","user","DialogItem","messages","Messages","TextareaForm","type","compose","connect","state","actionSendDialogMessageCreator","withAuthRedirect","Dialogs","_objectSpread","data","dialogs","btnText","isValid","_useForm","useForm","mode","register","handleSubmit","reset","formState","nameTextarea","required","ButtonSubmit","mapStateToPropsForRedirect","auth","Component","isAuth","Navigate"],"sourceRoot":""}