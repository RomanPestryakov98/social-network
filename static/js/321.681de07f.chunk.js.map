{"version":3,"file":"static/js/321.681de07f.chunk.js","mappings":"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","sources":["components/Login/Login.js"],"sourcesContent":["import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { isEmail } from 'validator';\r\nimport './Login.css';\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nfunction Login(props) {\r\n\tfunction onSubmit(data) {\r\n\t\treturn props.login(data);\r\n\t}\r\n\r\n\treturn (\r\n\t\t!props.isAuth\r\n\t\t\t?\r\n\t\t\t<LoginForm {...props} onSubmit={onSubmit} captcha={props.captcha} />\r\n\t\t\t:\r\n\t\t\t<Navigate to='/profile' />\r\n\t)\r\n}\r\n\r\nfunction LoginForm({ onSubmit, submitError, captcha }) {\r\n\tconst { register, setError, handleSubmit, formState: { errors } } = useForm({ mode: 'onChange' });\r\n\r\n\tasync function onHandleSubmit(data) {\r\n\t\tconst respones = await onSubmit(data);\r\n\t\tif (respones?.resultCode !== 0) {\r\n\t\t\tif (respones?.messages[0] === 'Incorrect anti-bot symbols') {\r\n\t\t\t\tsetError('captcha', { type: 'Symbols', message: respones.messages[0] });\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsetError('email', { type: 'Unauthorized', message: respones.messages[0] });\r\n\t\t\tsetError('password', { type: 'Unauthorized', message: respones.messages[0] });\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit(onHandleSubmit)} className=\"login__form\">\r\n\t\t\t<label className='login__label'>\r\n\t\t\t\t<span className='login__label-text'>Почта</span>\r\n\t\t\t\t<input type=\"email\" {...register('email', {\r\n\t\t\t\t\trequired: 'Обязательное поле',\r\n\t\t\t\t\tvalidate: value => isEmail(value) || 'Нужно ввести email',\r\n\t\t\t\t})} />\r\n\t\t\t\t<span className='login__input-error'>\r\n\t\t\t\t\t{errors?.email?.message}\r\n\t\t\t\t</span>\r\n\t\t\t</label>\r\n\r\n\t\t\t<label className='login__label'>\r\n\t\t\t\t<span className='login__label-text'>Пароль</span>\r\n\t\t\t\t<input type=\"password\" {...register('password', {\r\n\t\t\t\t\trequired: 'Обязательное поле',\r\n\t\t\t\t\tminLength: {\r\n\t\t\t\t\t\tvalue: 5,\r\n\t\t\t\t\t\tmessage: \"Минимальная длина пароля 5 символов\"\r\n\t\t\t\t\t},\r\n\t\t\t\t})} />\r\n\t\t\t\t<span className='login__input-error'>\r\n\t\t\t\t\t{errors?.password?.message}\r\n\t\t\t\t</span>\r\n\t\t\t</label>\r\n\t\t\t<div>\r\n\t\t\t\t<input type=\"checkbox\" {...register('rememberMe')} />\r\n\t\t\t\t<span className='form__label-text'>Запомнить меня</span>\r\n\t\t\t</div>\r\n\t\t\t{captcha &&\r\n\t\t\t\t<>\r\n\t\t\t\t\t<img src={captcha} alt='captcha' />\r\n\t\t\t\t\t<input type=\"text\" {...register('captcha', {\r\n\t\t\t\t\t\trequired: 'Обязательное поле'\r\n\t\t\t\t\t})} />\r\n\t\t\t\t\t<span className='login__input-error'>\r\n\t\t\t\t\t\t{errors?.captcha?.message}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t\t<div><input type=\"submit\" value='Войти' /></div>\r\n\t\t\t<p>{submitError && 'ошибка'}</p>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tisAuth: state.auth.isAuth,\r\n\t\tcaptcha: state.auth.captcha\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n\tlogin\r\n};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n)(Login);"],"names":["LoginForm","_ref","_errors$email","_errors$password","_errors$captcha","onSubmit","submitError","captcha","_useForm","useForm","mode","register","setError","handleSubmit","errors","formState","_onHandleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","respones","wrap","_context","prev","next","sent","resultCode","messages","type","message","abrupt","stop","apply","arguments","_jsxs","_x","className","children","_jsx","_objectSpread","required","validate","value","isEmail","email","minLength","password","_Fragment","src","alt","mapDispatchToProps","login","compose","connect","state","isAuth","auth","props","Navigate","to"],"sourceRoot":""}