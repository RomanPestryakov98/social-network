{"version":3,"file":"static/js/844.2084c0f5.chunk.js","mappings":"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","sources":["components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostContainer.js","components/Profile/ProfileStatus/ProfileStatus.js","components/Profile/Profile.jsx","redux/profile-selectors.js","components/Profile/ProfileContainer.jsx","components/common/ButtonSubmit/ButtonSubmit.js","components/TextareaForm/TextareaForm.js","hoc/withAuthRedirect.js"],"sourcesContent":["import './Post.css';\r\nimport avatar from '../../../../image/avatar.jpg';\r\n\r\nfunction Post(props) {\r\n\treturn (\r\n\t\t<li className=\"post\">\r\n\t\t\t<img src={avatar} className=\"post__avatar\" alt='avatar' />\r\n\t\t\t<p className=\"post__message\">{props.message}</p>\r\n\t\t</li>\r\n\t);\r\n}\r\n\r\nexport default Post;\r\n\r\n\r\n","import './MyPosts.css';\r\nimport Post from './Post/Post';\r\nimport React from 'react';\r\nimport TextareaForm from '../../TextareaForm/TextareaForm';\r\n\r\nfunction MyPosts({ profilePage, onSubmit }) {\r\n\treturn (\r\n\t\t<div className=\"my-posts\">\r\n\t\t\t<h2 className=\"my-posts__title\">Мои посты</h2>\r\n\t\t\t<TextareaForm type='post' onSubmit={onSubmit} />\r\n\r\n\t\t\t<ul className=\"my-posts__list\">\r\n\t\t\t\t{profilePage.posts.map((post, index) => <Post key={index} avatar={post.avatar} message={post.message} />)}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MyPosts;\r\n\r\n\r\n","import { actionAddPostCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction MyPostsContainer(props) {\r\n\tfunction onSubmit(textarea) {\r\n\t\tprops.actionAddPostCreator(textarea.post);\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<MyPosts {...props} onSubmit={onSubmit} />\r\n\t)\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tprofilePage: state.profilePage\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { actionAddPostCreator })(MyPostsContainer);\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nfunction ProfileStatus(props) {\r\n\tconst [status, setStatus] = useState(props.status);\r\n\tconst [editStatus, setEditStatus] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetStatus(props.status)\r\n\t}, [props.status])\r\n\r\n\tfunction handleChangeStatus(e) {\r\n\t\tsetStatus(e.target.value)\r\n\t}\r\n\r\n\tfunction handleUpdateStatus() {\r\n\t\tprops.onUpdateStatus(status)\r\n\t\tsetEditStatus(false)\r\n\t}\r\n\r\n\treturn (\r\n\t\t< div >\r\n\t\t\t{!editStatus\r\n\t\t\t\t?\r\n\t\t\t\t<span onDoubleClick={() => { setEditStatus(true) }} >{props.status ? props.status : 'Нет статуса'}</span>\r\n\t\t\t\t:\r\n\t\t\t\t<input autoFocus={true} onBlur={handleUpdateStatus} onChange={handleChangeStatus} value={status} />\r\n\t\t\t}\r\n\r\n\r\n\t\t</div >\r\n\t);\r\n}\r\n\r\nexport default ProfileStatus;\r\n\r\n\r\n","import MyPostsContainer from './MyPosts/MyPostContainer';\r\nimport './Profile.css';\r\nimport photoUser from '../../image/user.jpg';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nfunction Profile(props) {\r\n\tconst params = useParams();\r\n\treturn (\r\n\t\t<div className=\"main__profile profile\">\r\n\t\t\t<div className=\"profile__data\">\r\n\t\t\t\t<h2 className=\"profile__name\">{props?.profile?.fullName}</h2>\r\n\t\t\t\t<div className=\"profile__img\">\r\n\t\t\t\t\t<img src={props?.profile?.photos?.small ? props?.profile?.photos?.small : photoUser} alt='avatar' />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<ProfileStatus {...props} />\r\n\t\t\t\t{/* <ul className=\"profile__data-list\">\r\n\t\t\t\t\t<li className=\"profile__item\">\r\n\t\t\t\t\t\tДень Рождения:\r\n\t\t\t\t\t\t<span>27 января</span>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"profile__item\">\r\n\t\t\t\t\t\tГород:\r\n\t\t\t\t\t\t<span>Москва</span>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"profile__item\">\r\n\t\t\t\t\t\tОбразование:\r\n\t\t\t\t\t\t<span>Высшее</span>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"profile__item\">\r\n\t\t\t\t\t\tВеб-сайт:\r\n\t\t\t\t\t\t<span>https://github.com/RomanPestryakov98</span>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul> */}\r\n\t\t\t</div>\r\n\t\t\t{!params.userId && <MyPostsContainer />}\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\n","export function getProfileSelector(state) {\r\n\treturn state.profilePage.profile;\r\n}\r\n\r\nexport function getProfileStatusSelector(state) {\r\n\treturn state.profilePage.status;\r\n} ","import { getUserProfile, getUserStatus, updateUserStatusThunk } from '../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport React, { useEffect } from 'react';\r\nimport Profile from './Profile';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getProfileSelector, getProfileStatusSelector } from '../../redux/profile-selectors';\r\n\r\nfunction ProfileContainer({ setUserProfile, setUserStatus, updateUserStatusThunk, ...props }) {\r\n\tconst params = useParams();\r\n\tuseEffect(() => {\r\n\t\tif (props.auth.isAuth && !params.userId) {\r\n\t\t\tsetUserProfile(props.auth.id);\r\n\t\t\tsetUserStatus(props.auth.id);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetUserProfile(params.userId);\r\n\t\t\tsetUserStatus(params.userId);\r\n\t\t}\r\n\t\t// eslint-disable-next-line\r\n\t}, [])\r\n\r\n\r\n\tfunction onUpdateStatus(status) {\r\n\t\tupdateUserStatusThunk(status)\r\n\t}\r\n\treturn (\r\n\t\t<Profile {...props} onUpdateStatus={onUpdateStatus} />\r\n\t)\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tprofile: getProfileSelector(state),\r\n\t\tstatus: getProfileStatusSelector(state),\r\n\t}\r\n}\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, { setUserProfile: getUserProfile, setUserStatus: getUserStatus, updateUserStatusThunk }),\r\n\twithAuthRedirect,\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n","import './ButtonSubmit.css';\r\n\r\nfunction ButtonSubmit({ btnText, isValid }) {\r\n\tconst classNameBtn = 'btn-form';\r\n\tconst classNameBtnDisabled = 'btn-form_disabled';\r\n\r\n\treturn (\r\n\t\t<button className={`${classNameBtn} ${!isValid ? classNameBtnDisabled : ''}`}>\r\n\t\t\t{btnText}\r\n\t\t</button>\r\n\t)\r\n}\r\n\r\nexport default ButtonSubmit;\r\n\r\n","import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport ButtonSubmit from '../common/ButtonSubmit/ButtonSubmit';\r\n\r\nfunction TextareaForm({ type, onSubmit }) {\r\n\tconst { register, handleSubmit, reset, formState: { isValid } } = useForm({ mode: 'onChange' });\r\n\r\n\tconst nameTextarea = type === 'dialogs' ? 'dialogs' : (type === 'post' && 'post');\r\n\r\n\tfunction onHandleSubmit(data) {\r\n\t\tonSubmit(data);\r\n\t\treset();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit(onHandleSubmit)}>\r\n\t\t\t<div>\r\n\t\t\t\t<textarea {...register(nameTextarea, {\r\n\t\t\t\t\trequired: 'Обязательное поле',\r\n\t\t\t\t})} />\r\n\t\t\t</div>\r\n\t\t\t<ButtonSubmit isValid={isValid} btnText={(nameTextarea === 'post' && 'Добавить пост') || (nameTextarea === 'dialogs' && 'Отправить сообщение')} />\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default TextareaForm;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n\treturn {\r\n\t\tauth: state.auth,\r\n\t}\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\tfunction RedirectComponent(props) {\r\n\t\treturn (\r\n\t\t\tprops.auth.isAuth ? <Component {...props} /> : <Navigate to='/login' />\r\n\t\t)\r\n\t}\r\n\treturn connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}"],"names":["props","_jsxs","className","children","_jsx","src","avatar","alt","message","_ref","profilePage","onSubmit","TextareaForm","type","posts","map","post","index","Post","connect","state","actionAddPostCreator","MyPosts","_objectSpread","textarea","_useState","useState","status","_useState2","_slicedToArray","setStatus","_useState3","_useState4","editStatus","setEditStatus","useEffect","autoFocus","onBlur","onUpdateStatus","onChange","e","target","value","onDoubleClick","_props$profile","_props$profile2","_props$profile2$photo","_props$profile3","_props$profile3$photo","params","useParams","profile","fullName","photos","small","photoUser","ProfileStatus","userId","MyPostsContainer","getProfileSelector","getProfileStatusSelector","compose","setUserProfile","getUserProfile","setUserStatus","getUserStatus","updateUserStatusThunk","withAuthRedirect","_objectWithoutProperties","_excluded","auth","isAuth","id","Profile","btnText","isValid","concat","_useForm","useForm","mode","register","handleSubmit","reset","formState","nameTextarea","data","required","ButtonSubmit","mapStateToPropsForRedirect","Component","Navigate","to"],"sourceRoot":""}